---
import "./index.css";

import type { HTMLAttributes } from "astro/types";
import type { FormValidation } from "./types.ts";

import generateShortId from "../utilities/generateShortId/index.ts";
import mapAttributes from "../utilities/mapAttributes/index.ts";

export type Props = HTMLAttributes<"form"> & {
  labelledBy?: string | undefined;
  validation?: FormValidation | undefined;
};

const {
  action,
  autocorrect: _autocorrect,
  id: form = generateShortId(),
  labelledBy,
  method = "post",
  validation = "default",
  ...props
} = Astro.props;

const attrs = mapAttributes(props, ["form"]);

const content = await Astro.slots.render("default", [form]);
const aria = labelledBy ? { "aria-labelledby": labelledBy } : {};
const validate =
  validation === "default" ? {} : { [`data-${validation}`]: true };
---

<form {...attrs} {...aria} {action} id={form} {method} {...validate}>
  <input name="_charset_" type="hidden" />
  <Fragment set:html={content} />
</form>
