---
import "./index.css";

import type { HTMLAttributes } from "astro/types";

import type { Meta } from "../../types.ts";

export type Props = HTMLAttributes<"nav"> & {
  label?: string | undefined;
  pages: Array<Meta>;
};

const { label: l, pages, ...props } = Astro.props;

const attrs = Object.assign(
  {
    class: "uplink",
  },
  props
);

const { pathname } = Astro.url;
const href =
  pathname
    .replace(/(?<=.)\/$/, "")
    .split("/")
    .slice(0, -1)
    .join("/") || "/";
const label = pages.find(page => page.href === href)?.link?.label || l || "Up";

const arrow = await Astro.slots.render("arrow");

const notHome = Astro.url.pathname.length > 1;
---

{
  notHome ? (
    <nav aria-label="Link to parent page." {...attrs}>
      {href && href.length ? (
        <>
          <Fragment set:html={arrow} />
          <a href={href}>{href === "/" ? "Home" : label}</a>
        </>
      ) : undefined}
    </nav>
  ) : undefined
}
